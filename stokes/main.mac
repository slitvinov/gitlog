declare(mu, constant);
declare([xb, yb, xf, yf, tb], linear);

B(expr)::=buildq([expr],
    block([ij: args(X), o: op(X), i, j], i: ij[1], j: ij[2],
      expr));

pre(X):=not atom(X) and (op(X) = 'f or op(X) = 'p or op(X) = u[0] or op(X) = u[1]);
matchdeclare(X, pre);

tellsimpafter(tb(X), B(o[i, j] - prev(o)[i, j]));

tellsimpafter(xb(X), B(o[i, j] - o[i - 1, j]));
tellsimpafter(yb(X), B(o[i, j] - o[i, j - 1]));

tellsimpafter(xf(X), B(o[i + 1, j] - o[i, j]));
tellsimpafter(yf(X), B(o[i, j + 1] - o[i, j]));


ff: fx[0, 0];
ux: u[0][0, 0];
uy: u[0][0, 0];
pp: p[0, 0];

A: - mu * xf(xb(ux)) + yf(yb(ux));
B: 1/2 * (ux * xf(ux) + uy * yf(ux));
C: xb(pp);


e: expand(A + B + C);
